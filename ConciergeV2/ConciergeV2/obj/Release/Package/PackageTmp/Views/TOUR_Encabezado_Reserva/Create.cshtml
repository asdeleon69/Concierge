@model ConciergeV2.Models.TOUR_Encabezado_Reserva

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script>
    function CalcularTotal() {
        var Adulto = (parseFloat($("#PaxAdul").val() !== '' ? $("#PaxAdul").val() : 0) * parseFloat($("#PrecioAdulto").val() !== '' ? $("#PrecioAdulto").val() : 0));
        var AdultoM = (parseFloat($("#PaxAdulM").val() !== '' ? $("#PaxAdulM").val() : 0) * parseFloat($("#PrecioAdultoMayor").val() !== '' ? $("#PrecioAdultoMayor").val() : 0));
        var Ninho = (parseFloat($("#PaxNino").val() !== '' ? $("#PaxNino").val() : 0) * parseFloat($("#PrecioNino").val() !== '' ? $("#PrecioNino").val() : 0));

        //Valido
        Adulto = (Adulto !== null && Adulto !== undefined) ? Adulto : 0;
        AdultoM = (AdultoM !== null && AdultoM !== undefined) ? AdultoM : 0;
        Ninho = (Ninho !== null && Ninho !== undefined) ? Ninho : 0;

        //Total
        $("#Total").val(Adulto + AdultoM + Ninho)
    }
</script>

<div class="content-header">
    <h2>Crear</h2>
</div>

<div class="content container-fluid">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Encabezado reserva tour</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="container">
            <div class="form-group">
                @Html.LabelFor(model => model.FecReg, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="text" id="FecReg" name="FecReg" class="form-control" value="@(DateTime.Now.ToShortDateString())" autocomplete="off" readonly="readonly" />
                    @Html.ValidationMessageFor(model => model.FecReg, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-sm-3 form-group">
                    <div class="col-md-12">
                        <label class="control-label">Buscar huesped</label>
                        <br />
                        <input type="text" id="Nombre" name="Nombre" class="form-control" autocomplete="off" />
                    </div>
                </div>
                <div class="col-sm-3 form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.ReservaOpera, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.EditorFor(model => model.ReservaOpera, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.ReservaOpera, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-3 form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.Checkin, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.EditorFor(model => model.Checkin, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Checkin, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-3 form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.Checkout, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.EditorFor(model => model.Checkout, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Checkout, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-3 form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.NomHuesped, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.EditorFor(model => model.NomHuesped, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.NomHuesped, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-3 form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-3 form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.NumRoom, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.EditorFor(model => model.NumRoom, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.NumRoom, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-3 form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.UsrReg, htmlAttributes: new { @class = "control-label" })
                        <br />
                        <input type="text" id="UsrReg" name="UsrReg" class="form-control" readonly="readonly" />
                        @*@Html.ValidationMessageFor(model => model.FecReg, "", new { @class = "text-danger" })*@
                    </div>
                </div>
            </div>
            @*<div class="row">

            <div class="col-sm-4 form-group"></div>
            <div class="col-sm-4 form-group"></div>
        </div>
        <div class="row">

            <div class="col-sm-4 form-group"></div>
            <div class="col-sm-4 form-group"></div>
        </div>*@
            <div class="row">
                <div class="col-sm-4 form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.Alergias, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.TextAreaFor(model => model.Alergias, new { htmlAttributes = new { @class = "md-textarea form-control" }, rows = 3, cols = 45 })
                        @Html.ValidationMessageFor(model => model.Alergias, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-4 form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.Observaciones, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.TextAreaFor(model => model.Observaciones, new { htmlAttributes = new { @class = "md-textarea form-control" }, rows = 3, cols = 45 })
                        @Html.ValidationMessageFor(model => model.Observaciones, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-4 form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.NotasCliente, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.TextAreaFor(model => model.NotasCliente, new { htmlAttributes = new { @class = "md-textarea form-control" }, rows = 3, cols = 45 })
                        @Html.ValidationMessageFor(model => model.NotasCliente, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4 form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.CodCom, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.DropDownList("CodCom", null, "-SELECCIONE UNA OPCION-", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CodCom, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-4 form-group"></div>
                <div class="col-sm-4 form-group"></div>
            </div>
            <div class="row">
                <div class="col-sm-4 form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.CodTour, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.DropDownList("CodTour", null, "-SELECCIONE UNA OPCION-", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CodTour, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-2 form-group"></div>
                <div class="col-sm-6 form-group">
                    <div class="md-form">
                        <i class="fas fa-pencil-alt prefix"></i>
                        <textarea id="NotasDes" class="md-textarea form-control col-md-10" rows="3"></textarea>
                        <label for="form10">Descripción y notas tour</label>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4 form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.PaxAdul, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.EditorFor(model => model.PaxAdul, new { htmlAttributes = new { @class = "form-control", @type = "number", @OnChange = "CalcularTotal()" } })
                        @Html.ValidationMessageFor(model => model.PaxAdul, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-4 form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.PaxAdulM, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.EditorFor(model => model.PaxAdulM, new { htmlAttributes = new { @class = "form-control", @type = "number", @OnChange = "CalcularTotal()" } })
                        @Html.ValidationMessageFor(model => model.PaxAdulM, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-4 form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.PaxNino, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.EditorFor(model => model.PaxNino, new { htmlAttributes = new { @class = "form-control", @type = "number", @OnChange = "CalcularTotal()" } })
                        @Html.ValidationMessageFor(model => model.PaxNino, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4 form-group">
                    <div class="col-md-12">
                        @Html.Label("Precio Adulto", htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.Editor("PrecioAdulto", new { htmlAttributes = new { @class = "form-control", @type = "number", @readonly = "readonly" } })
                    </div>
                </div>
                <div class="col-sm-4 form-group">
                    <div class="col-md-12">
                        @Html.Label("Precio Adulto Mayor", htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.Editor("PrecioAdultoMayor", new { htmlAttributes = new { @class = "form-control", @type = "number", @readonly = "readonly" } })
                    </div>
                </div>
                <div class="col-sm-4 form-group">
                    <div class="col-md-12">
                        @Html.Label("Precio Niño", htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.Editor("PrecioNino", new { htmlAttributes = new { @class = "form-control", @type = "number", @readonly = "readonly" } })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4 form-group">

                </div>
                <div class="col-sm-4 form-group">

                </div>
                <div class="col-sm-4 form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4 form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.Fecha, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.EditorFor(model => model.Fecha, new { htmlAttributes = new { @class = "form-control", @type = "Date" } })
                        @Html.ValidationMessageFor(model => model.Fecha, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-4 form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.Hora, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.EditorFor(model => model.Hora, new { htmlAttributes = new { @class = "form-control", @type = "time" } })
                        @Html.ValidationMessageFor(model => model.Hora, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-4 form-group"></div>
            </div>
            <div class="row">
                <div class="col-sm-4 form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.ReturnTime, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.EditorFor(model => model.ReturnTime, new { htmlAttributes = new { @class = "form-control", @type = "time" } })
                        @Html.ValidationMessageFor(model => model.ReturnTime, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-4 form-group"></div>
                <div class="col-sm-4 form-group"></div>
            </div>




            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Crear" class="btn btn-default" />
                </div>
            </div>
        </div>
        </div>
    }

    <div>
        @Html.ActionLink("Regresar atrás", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")

        <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
        <script>
            $('#Nombre').autocomplete({
                source: function (request, response) {
                    $.ajax({
                        async: true,
                        url: "/TOUR_Encabezado_Reserva/ObtenerReservaciones",
                        datatype: "json",
                        data: {
                            term: request.term
                        },
                        success: function (data) {
                            if (data.length > 0) {
                                response($.map(data, function (item) {
                                    return {
                                        label: item.huesped,
                                        id: item.id,
                                        huesped: item.label,
                                        checkin: item.checkin,
                                        checkout: item.checkout,
                                        room: item.room,
                                        email: item.email
                                    }
                                }))
                            }
                            else {
                                response([{ label: '-SIN COINCIDENCIAS-', id: '-1' }]);
                            }
                        },
                        messages: {
                            noResults: '', results: function () { }
                        },
                    })
                },
                select: function (event, ui) {
                    //$('#idProd').val(ui.item.id);
                    $("#ReservaOpera").val(ui.item.huesped);
                    $("#NomHuesped").val(ui.item.label);
                    $("#Checkout").val(new Date(ui.item.checkout).toLocaleDateString());
                    $("#Checkin").val(ui.item.checkin);
                    $("#Checkout").val(ui.item.checkout);
                    $("#NumRoom").val(ui.item.room);
                    $("#Email").val(ui.item.email);

                }
            });

            $('#CodTour').change(function () {
                $.ajax({
                    async: true,
                    url: "/TOUR_Encabezado_Reserva/ObtenerCodCom",
                    datatype: "json",
                    data: {
                        CodTour: $('#CodTour').val()
                    },
                    success: function (data) {
                        $("#PrecioAdulto").val(data.PreTourAdulto);
                        $("#PrecioAdultoMayor").val(data.PreTourAdultoM);
                        $("#PrecioNino").val(data.PreTourNino);
                        $("#NotasDes").val(data.descripcion);
                    }
                })
            });
        </script>
    }

</div>