@model ConciergeV2.Models.User

@{
    ViewBag.Title = "Edit";
}

<style>
    span.error {
        display: block;
        visibility: hidden;
        color: red;
        font-size: 90%;
    }

    tr.error {
        background-color: rgba(255,0,0,0.35);
    }
</style>

<div class="content-header">
    <h2>Editar</h2>
</div>

<div class="content container-fluid">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Usuario</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label" })
                    <br />
                    @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                    @*@Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })*@
                    <span class="error">Nombre no puede estar vacio</span>
                </div>
            </div>

            @*<div class="form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.Usuario, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.EditorFor(model => model.Usuario, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Usuario, "", new { @class = "text-danger" })
                        <span class="error">Nombre del huesped que se atendera</span>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.PasswordConfirm, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.EditorFor(model => model.PasswordConfirm, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PasswordConfirm, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Activo, htmlAttributes: new { @class = "control-label" })
                    <br />
                    @Html.EditorFor(model => model.Activo)
                    @Html.ValidationMessageFor(model => model.Activo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Nivel, htmlAttributes: new { @class = "control-label" })
                    <br />
                    @Html.EditorFor(model => model.Nivel, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nivel, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Guardar" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Regresar atrás", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
</div>
