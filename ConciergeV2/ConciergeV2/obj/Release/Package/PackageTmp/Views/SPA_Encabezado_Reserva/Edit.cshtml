@model ConciergeV2.Models.SPA_Encabezado_Reserva

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<section class="content-header">
    <h2>Editar</h2>
</section>


<section class="content container-fluid">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Encabezado reserva spa</h4>
            <hr />
            <div class="form-group" style="text-align:left !important;">
                <label class="control-label col-md-2">Buscar huesped</label>
                <input type="text" id="Nombre" name="Nombre" class="form-control col-md-8" autocomplete="off" />
            </div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.CodReserva)

            <div class="row">
                <div class="col-sm-4 form-group">
                    @Html.LabelFor(model => model.ReservaOpera, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ReservaOpera, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.ReservaOpera, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-4 form-group">
                    @Html.LabelFor(model => model.Checkin, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Checkin, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Checkin, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-4 form-group">
                    @Html.LabelFor(model => model.FecReg, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.FecReg, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @*@Html.ValidationMessageFor(model => model.FecReg, "", new { @class = "text-danger" })*@
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4 form-group">
                    @Html.LabelFor(model => model.NumRoom, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.NumRoom, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.NumRoom, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-4 form-group">
                    @Html.LabelFor(model => model.Checkout, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Checkout, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Checkout, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-4 form-group">
                    @Html.LabelFor(model => model.UsrReg, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        <input type="text" id="UsrReg" name="UsrReg" class="form-control" readonly="readonly" />
                        @*@Html.ValidationMessageFor(model => model.FecReg, "", new { @class = "text-danger" })*@
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4 form-group">
                    @Html.LabelFor(model => model.NomHuesped, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.NomHuesped, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.NomHuesped, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-4 form-group"></div>
                <div class="col-sm-4 form-group"></div>
            </div>
            <div class="row">
                <div class="col-sm-4 form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-4 form-group"></div>
                <div class="col-sm-4 form-group"></div>
            </div>
            <div class="row">
                <div class="col-sm-4 form-group">
                    @Html.LabelFor(model => model.Alergias, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextAreaFor(model => model.Alergias, new { htmlAttributes = new { @class = "md-textarea form-control col-md-10" } })
                        @Html.ValidationMessageFor(model => model.Alergias, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-4 form-group">
                    @Html.LabelFor(model => model.Observaciones, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextAreaFor(model => model.Observaciones, new { htmlAttributes = new { @class = "md-textarea form-control col-md-8" }, @rows = 3, @cols = "30" })
                        @Html.ValidationMessageFor(model => model.Observaciones, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-4 form-group">
                    @Html.LabelFor(model => model.NotasCliente, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextAreaFor(model => model.NotasCliente, new { htmlAttributes = new { @class = "md-textarea form-control col-md-8" }, @rows = 3, @cols = "30" })
                        @Html.ValidationMessageFor(model => model.NotasCliente, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Regresar atrás", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
        <script>
            $('#Nombre').autocomplete({
                source: function (request, response) {
                    $.ajax({
                        async: true,
                        url: "/TOUR_Encabezado_Reserva/ObtenerReservaciones",
                        datatype: "json",
                        data: {
                            term: request.term
                        },
                        success: function (data) {
                            if (data.length > 0) {
                                response($.map(data, function (item) {
                                    return {
                                        label: item.huesped,
                                        id: item.id,
                                        huesped: item.label,
                                        checkin: item.checkin,
                                        checkout: item.checkout,
                                        room: item.room,
                                        email: item.email
                                    }
                                }))
                            }
                            else {
                                response([{ label: '-SIN COINCIDENCIAS-', id: '-1' }]);
                            }
                        },
                        messages: {
                            noResults: '', results: function () { }
                        },
                    })
                },
                select: function (event, ui) {
                    //$('#idProd').val(ui.item.id);
                    $("#ReservaOpera").val(ui.item.huesped);
                    $("#NomHuesped").val(ui.item.label);
                    $("#Checkout").val(new Date(ui.item.checkout).toLocaleDateString());
                    $("#Checkin").val(ui.item.checkin);
                    $("#Checkout").val(ui.item.checkout);
                    $("#NumRoom").val(ui.item.room);
                    $("#Email").val(ui.item.email);

                }
            });
        </script>
    }
</section>